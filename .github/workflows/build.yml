name: Unzip, Build & Sign APK (ZIP at repo root)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unzip project if a ZIP is present
        run: |
          set -e
          ZIP="$(ls -1 *.zip 2>/dev/null | head -n1 || true)"
          if [ -n "$ZIP" ]; then
            echo "Found ZIP: $ZIP"
            rm -rf srcdir
            mkdir -p srcdir
            unzip -q "$ZIP" -d srcdir
          else
            echo "No ZIP at repo root; assuming sources are already committed."
          fi

      - name: Locate Gradle root
        run: |
          set -e
          for base in srcdir . ; do
            if [ -f "$base/settings.gradle" ] || [ -f "$base/settings.gradle.kts" ]; then
              echo "GRADLE_DIR=$base" >> "$GITHUB_ENV"
              echo "Detected Gradle root at: $base"
              exit 0
            fi
          done
          f="$(find srcdir -maxdepth 2 -name settings.gradle -o -name settings.gradle.kts | head -n1 || true)"
          if [ -n "$f" ]; then
            d="$(dirname "$f")"
            echo "GRADLE_DIR=$d" >> "$GITHUB_ENV"
            echo "Detected Gradle root at: $d"
            exit 0
          fi
          echo "Could not find settings.gradle anywhere. Ensure your ZIP has a Gradle Android project."
          exit 1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Release APK
        working-directory: ${{ env.GRADLE_DIR }}
        run: |
          set -e
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew clean assembleRelease --stacktrace
          else
            gradle clean assembleRelease --stacktrace
          fi

      - name: Map signing secrets
        shell: bash
        run: |
          set -e
          sk="${{ secrets.SIGNING_KEY }}"; if [ -z "$sk" ]; then sk="${{ secrets.signing_key }}"; fi
          echo "SIGNING_KEY_B64=$sk" >> "$GITHUB_ENV"
          ks="${{ secrets.KEYSTORE_PASSWORD }}"; if [ -z "$ks" ]; then ks="${{ secrets.ks_pass }}"; fi
          echo "KEYSTORE_PASSWORD=$ks" >> "$GITHUB_ENV"
          ka="${{ secrets.KEY_ALIAS }}"; if [ -z "$ka" ]; then ka="${{ secrets.key_alias }}"; fi
          echo "KEY_ALIAS=$ka" >> "$GITHUB_ENV"
          kp="${{ secrets.KEY_ALIAS_PASSWORD }}"; if [ -z "$kp" ]; then kp="${{ secrets.ks_pass }}"; fi
          echo "KEY_PASSWORD=$kp" >> "$GITHUB_ENV"

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ${{ env.GRADLE_DIR }}/app/build/outputs/apk/release
          signingKeyBase64: ${{ env.SIGNING_KEY_B64 }}
          alias: ${{ env.KEY_ALIAS }}
          keyStorePassword: ${{ env.KEYSTORE_PASSWORD }}
          keyPassword: ${{ env.KEY_PASSWORD }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          if-no-files-found: error
          path: |
            ${{ env.GRADLE_DIR }}/app/build/outputs/apk/release/*signed*.apk
            ${{ env.GRADLE_DIR }}/app/build/outputs/apk/release/*.apk
